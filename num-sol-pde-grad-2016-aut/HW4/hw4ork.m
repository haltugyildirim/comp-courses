clear all;clc;% Zaman, mekan adimlari;% prompt = 'Istenen zaman adimini giriniz: ';% dt = input(prompt);% prompt = 'Istenen zaman adimini giriniz: ';% dx = input(prompt);dt = 0.0012;%t = 50*dt;dx = 0.05;%mu degeri;m = dt/(dx)^2;%mekan vektoru;x = 0:dx:1; Nx = length(x); N = Nx-2;%a, b, c katsayilari%ornek problemde a, b ,c sabit;a=m; c=m; b=1+2*m;%Baslagnic U degerleri d katsayilarina esit olacak;U = zeros(1,Nx);for k=1:(length(U))  if (x(k)<0.5)      U(k)=2*x(k);  elseif (x(k)>=0.5)      U(k)=2-2*x(k);  endend%d katsayilari, U(J) ve U(1) dÄ±sinda kalan vektore esittir;d = U(2:Nx-1);%e ve f katsayilari, e(0)=f(0)=0 oldugundan e(1) ve c(1) asagidaki gibi yazilir;e=zeros(1,N); e(1) = c/b;f=zeros(1,N); f(1) = d(1)/b;%e ve f katsayilarinin turetilmesi(Recurrence);for i=2:(N)  e(i) = c/(b-a*e(i-1));  f(i) = (d(i) + a*f(i-1))/(b - a*e(i-1));end% U'larin hesaplanmasi, U(J)'den baslayip U(1)'e kadar hesaplanacak% indislerle ugrasirken kolaylik saglamasi adina N = Nx-2 noktada % gecici bir u_gec tanimlanacak, daha sonra bu vektor U(J) ve U(1)% arasina yerlestirilecek. Boylece sinir kosullari kosulsuz bir% sekilde saglanir;u_gec=ones(1,N+1);% matris, ust ucgensel hale geldiginden u_gec(N)=f(N) esitligi kolayca% gorulur;u_gec(N+1)=U(Nx);for t=1:50  for l=NðŸ‘Ž1    u_gec(l) = e(l)*u_gec(l+1) + f(l);  endend%Sonuc;U(2:Nx)=u_gec;%Fourier Seri cozumu;%n=size(x); u = zeros(n);%for mm = 1:M%a = ;%u = u + a*exp(-1*mm*mm*pi*pi*t)*sin(mm*pi*x);%endplot(x,U);